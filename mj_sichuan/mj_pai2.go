package mj_sichuan

import (
	"fmt"
)

//这里是利用位操作

/*
麻将牌一共108张，三种花色，每个花色9种牌值，每个牌值4张牌，可以使用一个字节（8位）来表示所有的麻将牌
低四位表示牌值，0～15
5至6位表示花色：0～3
剩下两位待定

表示花色的两位：
00: 不用
01: 筒
10: 条
11: 万

所以，最终的麻将组合为：
00 01 0001 ——> 17(1筒)
00 01 0010 ——> 18(2筒)
00 01 0011 ——> 19(3筒)
00 01 0100 ——> 20(4筒)
00 01 0101 ——> 21(5筒)
00 01 0110 ——> 22(6筒)
00 01 0111 ——> 23(7筒)
00 01 1000 ——> 24(8筒)
00 01 1001 ——> 25(9筒)

00 10 0001 ——> 33(1条)
00 10 0010 ——> 34(2条)
00 10 0011 ——> 35(3条)
00 10 0100 ——> 36(4条)
00 10 0101 ——> 37(5条)
00 10 0110 ——> 38(6条)
00 10 0111 ——> 39(7条)
00 10 1000 ——> 40(8条)
00 10 1001 ——> 41(9条)

00 11 0001 ——> 49(1万)
00 11 0010 ——> 50(2万)
00 11 0011 ——> 51(3万)
00 11 0100 ——> 52(4万)
00 11 0101 ——> 53(5万)
00 11 0110 ——> 54(6万)
00 11 0111 ——> 55(7万)
00 11 1000 ——> 56(8万)
00 11 1001 ——> 57(9万)
*/

//牌定义
type (
	IntPai  uint8
	IntPais []IntPai
)

var AllPais = []IntPai{
	17, 18, 19, 20, 21, 22, 23, 24, 25,
	17, 18, 19, 20, 21, 22, 23, 24, 25,
	17, 18, 19, 20, 21, 22, 23, 24, 25,
	17, 18, 19, 20, 21, 22, 23, 24, 25,

	33, 34, 35, 36, 37, 38, 39, 40, 41,
	33, 34, 35, 36, 37, 38, 39, 40, 41,
	33, 34, 35, 36, 37, 38, 39, 40, 41,
	33, 34, 35, 36, 37, 38, 39, 40, 41,

	49, 50, 51, 52, 53, 54, 55, 56, 57,
	49, 50, 51, 52, 53, 54, 55, 56, 57,
	49, 50, 51, 52, 53, 54, 55, 56, 57,
	49, 50, 51, 52, 53, 54, 55, 56, 57,
}

func (p IntPai) String() (des string) {
	var v uint8
	switch {
	case p >= 17 && p <= 25:
		v = uint8(p) - 17 + 1
		des = fmt.Sprintf("%d筒", v)
	case p >= 33 && p <= 41:
		v = uint8(p) - 33 + 1
		des = fmt.Sprintf("%d条", v)
	case p >= 49 && p <= 57:
		v = uint8(p) - 49 + 1
		des = fmt.Sprintf("%d万", v)
	}
	return
}

func (ps IntPais) String() (des string) {
	for i, p := range ps {
		if i == 0 {
			des += p.String()
		} else {
			des += ", " + p.String()
		}
	}
	return
}

//排序
func (ps IntPais) Len() int {
	return len(ps)
}

func (ps IntPais) Less(i, j int) bool {
	return ps[i] < ps[j]
}

func (ps IntPais) Swap(i, j int) {
	ps[i], ps[j] = ps[j], ps[i]
}
